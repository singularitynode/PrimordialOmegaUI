{"ast":null,"code":"import EventEmitter from \"eventemitter3\";\nconst emitter = new EventEmitter();\nconst ws = new WebSocket(\"ws://127.0.0.1:8000/ws\");\nws.onopen = () => console.log(\"WebSocket connected.\");\nws.onclose = () => console.log(\"WebSocket disconnected.\");\nws.onerror = err => console.error(\"WebSocket error:\", err);\nws.onmessage = event => {\n  try {\n    const data = JSON.parse(event.data);\n    emitter.emit(\"update\", data);\n  } catch (err) {\n    console.error(\"Failed to parse WebSocket message:\", err);\n  }\n};\nexport default emitter;","map":{"version":3,"names":["EventEmitter","emitter","ws","WebSocket","onopen","console","log","onclose","onerror","err","error","onmessage","event","data","JSON","parse","emit"],"sources":["C:/Users/Darwin/PrimordialOmegaUI/frontend/src/WebSocket.js"],"sourcesContent":["import EventEmitter from \"eventemitter3\";\r\n\r\nconst emitter = new EventEmitter();\r\n\r\nconst ws = new WebSocket(\"ws://127.0.0.1:8000/ws\");\r\n\r\nws.onopen = () => console.log(\"WebSocket connected.\");\r\nws.onclose = () => console.log(\"WebSocket disconnected.\");\r\nws.onerror = (err) => console.error(\"WebSocket error:\", err);\r\nws.onmessage = (event) => {\r\n  try {\r\n    const data = JSON.parse(event.data);\r\n    emitter.emit(\"update\", data);\r\n  } catch (err) {\r\n    console.error(\"Failed to parse WebSocket message:\", err);\r\n  }\r\n};\r\n\r\nexport default emitter;\r\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,eAAe;AAExC,MAAMC,OAAO,GAAG,IAAID,YAAY,CAAC,CAAC;AAElC,MAAME,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;AAElDD,EAAE,CAACE,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;AACrDJ,EAAE,CAACK,OAAO,GAAG,MAAMF,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;AACzDJ,EAAE,CAACM,OAAO,GAAIC,GAAG,IAAKJ,OAAO,CAACK,KAAK,CAAC,kBAAkB,EAAED,GAAG,CAAC;AAC5DP,EAAE,CAACS,SAAS,GAAIC,KAAK,IAAK;EACxB,IAAI;IACF,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;IACnCZ,OAAO,CAACe,IAAI,CAAC,QAAQ,EAAEH,IAAI,CAAC;EAC9B,CAAC,CAAC,OAAOJ,GAAG,EAAE;IACZJ,OAAO,CAACK,KAAK,CAAC,oCAAoC,EAAED,GAAG,CAAC;EAC1D;AACF,CAAC;AAED,eAAeR,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}